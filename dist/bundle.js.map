{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://r301-js-introduction/webpack/bootstrap","webpack://r301-js-introduction/./node_modules/@kurkle/color/dist/color.esm.js","webpack://r301-js-introduction/webpack/runtime/global","webpack://r301-js-introduction/webpack/runtime/publicPath","webpack://r301-js-introduction/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://r301-js-introduction/./node_modules/chart.js/dist/chart.js","webpack://r301-js-introduction/./node_modules/chart.js/auto/auto.js","webpack://r301-js-introduction/./src/movies-api.js","webpack://r301-js-introduction/./src/movies-ui.js","webpack://r301-js-introduction/./src/add-images.js","webpack://r301-js-introduction/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/**\n * Calcul le total des coefficients d'une compétence\n * @param {*} competenceId id de la colonne de la compétence\n * @returns le total des coefficients de la compétence\n */\nexport function totalCompetence(competenceId) {\n    const lignes = document.querySelectorAll(\n        \"table > tbody > tr:not(#moy, #moyBonus, #total, .option)\",\n    );\n    let total = 0;\n    for (let i = 0; i < lignes.length; i++) {\n        const ligne = lignes[i];\n        const ligneId = ligne.id;\n        const cellule = document.querySelector(\n            `#${ligneId} > td:nth-child(${competenceId}) > input`,\n        );\n        if (cellule.value !== \"\") {\n            total += parseFloat(cellule.value);\n        }\n    }\n    return total;\n}\n\n/**\n * Récupère les notes depuis l'API\n * @param {*} url url de l'API\n * @param {*} data paramètres de la requête\n * @returns les notes, coefs et ues\n */\nexport async function fetchNotes(url, data = {}) {\n    const body = Object.keys(data)\n        .map(\n            (key) =>\n                `${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`,\n        )\n        .join(\"&\");\n    const response = await fetch(url, {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\", // x-www-form-urlencoded\n            Accept: \"application/json\",\n        },\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n        body,\n    });\n    // return await response.json();\n    return response.json();\n}\n\n/**\n * Récupère les notes depuis l'API et les affiche\n * @returns\n */\nexport async function getNotes() {\n    const loader = document.querySelector(\".loader-container\");\n    loader.classList.remove(\"hidden\");\n\n    // Recupérer le username et password\n    const username = document.getElementById(\"username\").value;\n    const password = document.getElementById(\"password\").value;\n\n    const notesJson = await fetchNotes(\n        \"https://api-notes-dev.vercel.app/notes\",\n        {\n            username,\n            password,\n        },\n    );\n\n    if (notesJson.err) {\n        loader.classList.add(\"hidden\");\n        alert(notesJson.err);\n    } else if (\n        notesJson[0].length === 0 ||\n        notesJson[0][0].matiere === \"Aucune note n'a été saisie\"\n    ) {\n        notesJson[0] = [];\n\n        loader.classList.add(\"hidden\");\n        alert(\"Aucune note trouvée\");\n    } else if (notesJson[1].length === 0) {\n        loader.classList.add(\"hidden\");\n        alert(\"Aucune compétence trouvée\");\n    } else {\n        // Mémoriser les notes, coefs et ues dans le local storage\n        localStorage.setItem(\"notes\", JSON.stringify(notesJson));\n\n        return notesJson;\n        /*\n        display_notes(notesJson[0], notesJson[1], notesJson[2]);\n\n        loader.classList.add(\"hidden\");\n\n        const formContainer = document.getElementById(\"formContainer\");\n        formContainer.style.display = \"none\";\n        */\n    }\n    return null;\n}\n\n/**\n * Calcul la moyenne d'une matière\n * @param ueCount\n * @param {*} lineId id de la ligne de la matière\n * @returns la moyenne de la matière\n */\nexport function calculMoyenneMatiere(ueCount, lineId) {\n    // Si le nombre de competences est paire, il faut ajouter 1 pour avoir le bon nombre de colonnes\n    const occurences = [\"2n+1\", \"2n\"];\n    if (ueCount % 2 !== 0) {\n        occurences.reverse();\n    }\n    const notes = document.querySelectorAll(\n        `#${lineId} td:nth-child(n+${ueCount + 2}):nth-child(${\n            occurences[0]\n        }):not(:last-child) > input`,\n    );\n    const coefs = document.querySelectorAll(\n        `#${lineId} td:nth-child(n+${ueCount + 3}):nth-child(${\n            occurences[1]\n        }):not(:last-child) > input`,\n    );\n    const notesVides = Array.from(notes).filter((note) => note.value === \"\");\n    if (notesVides.length === notes.length) {\n        document.querySelector(`#${lineId} input[type=checkbox]`).checked =\n            false;\n        document.querySelector(`#${lineId}`).classList.add(\"option\");\n        return 0;\n    }\n    // Somme des notes * coef\n    let sommeNotesCoef = 0;\n    let sommeCoef = 0;\n    notes.forEach((note, id) => {\n        if (note.value !== \"\" && coefs[id].value !== \"\") {\n            sommeNotesCoef +=\n                parseFloat(note.value.replace(\",\", \".\")) *\n                parseFloat(coefs[id].value.replace(\",\", \".\"));\n            sommeCoef += parseFloat(coefs[id].value.replace(\",\", \".\"));\n        } else {\n            sommeCoef += 0;\n        }\n    });\n    return Math.round((sommeNotesCoef / sommeCoef) * 1000) / 1000;\n}\n\n/**\n * Calcul la moyenne générale du bulletin\n * @param {int} totalCoefs Somme des coefficients de chaque matière\n * @param {array} moyennesMatieres Moyenne de chaque matière\n * @returns la moyenne générale du bulletin\n */\nexport function moyenneTotale(totalCoefs, moyennesMatieres) {\n    let somme = 0;\n    totalCoefs.forEach((coef, id) => {\n        somme += coef * moyennesMatieres[id];\n    });\n    return (\n        Math.round((somme / totalCoefs.reduce((a, b) => a + b, 0)) * 1000) /\n        1000\n    );\n}\n\n/**\n * Calcul la moyenne de l'intranet\n * @param {*} moyennesMatieres  Moyenne de chaque matière\n * @returns la moyenne de l'intranet\n */\nexport function moyenneIntranet(moyennesMatieres) {\n    let somme = 0;\n    moyennesMatieres.forEach((moyenne, id) => {\n        somme += moyennesMatieres[id];\n    });\n    return somme / moyennesMatieres.length;\n}\n\n/**\n * Calcul la moyenne d'une compétence\n * @param {*} competenceId id de la colonne de la compétence\n * @returns la moyenne de la compétence\n */\nexport function moyenneCompetence(competenceId) {\n    const lignes = document.querySelectorAll(\n        \"table > tbody > tr:not(#moy, #moyBonus, #total, .option)\",\n    );\n    let somme = 0;\n    lignes.forEach((ligne) => {\n        const ligneId = ligne.id;\n        const cellule = document.querySelector(\n            `#${ligneId} > td:nth-child(${competenceId}) > input`,\n        );\n        if (cellule.value !== \"\") {\n            const coef = parseFloat(cellule.value);\n            const moyenne = parseFloat(\n                document.querySelector(`#${ligneId} > td:last-child`).innerHTML,\n            );\n            somme += coef * moyenne;\n        }\n    });\n    return somme !== 0 ? somme / totalCompetence(competenceId) : 0;\n}\n\n/**\n * Calcul la moyenne d'une compétence avec bonus\n * @param competenceId\n * @return bonus\n */\nexport function moyenneBonus(competenceId) {\n    const moyenne = parseFloat(\n        document.querySelector(`#moy > td:nth-child(${competenceId})`)\n            .innerHTML,\n    );\n    // Si la ligne de bonus existe\n    const ligneBonus = document.querySelector(\"#bonus\");\n    let bonus = 0;\n    if (ligneBonus) {\n        bonus =\n            document.querySelector(\"#bonus\").classList[0] !== \"option\"\n                ? parseFloat(\n                      document.querySelector(\"#bonus > td:last-child\")\n                          .innerHTML,\n                  )\n                : 0;\n    }\n\n    return Math.min(\n        Math.max(Math.round((moyenne + 0.5 * (bonus / 20)) * 1000) / 1000, 0),\n        20,\n    );\n}\n","import Chart from \"chart.js/auto\";\nimport {\n    calculMoyenneMatiere,\n    moyenneBonus,\n    moyenneCompetence,\n    moyenneIntranet,\n    moyenneTotale,\n    totalCompetence,\n    getNotes,\n} from \"./movies-api\";\n\nexport const moyennes = {\n    moyennesMatieres: [],\n    moyennesCompetences: [],\n};\n\n/**\n * Change le color scheme du navigateur en fonction de la checkbox\n */\nexport function changeColorTheme() {\n    if (document.getElementById(\"darkMode\").checked) {\n        document.documentElement.setAttribute(\"data-theme\", \"light\");\n    } else {\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\n    }\n}\n\n/**\n * Compte le nombre de compétences\n * @returns le nombre de compétences\n */\nexport function compterCompetences() {\n    const competences = document.querySelectorAll(\".ue\");\n    return competences.length;\n}\n\n/**\n * Affiche la moyenne d'une matière\n * @param lineId\n */\nexport function showMoyenneMatiere(lineId) {\n    // Moyenne\n    document.querySelector(`#${lineId} td:last-child`).innerHTML =\n        calculMoyenneMatiere(compterCompetences(), lineId).toString();\n}\n\n/**\n * Affiche la moyenne générale du bulletin\n * @param totalCoefs\n * @param moyennesMatieres\n */\nexport function showMoyenneTotale(totalCoefs, moyennesMatieres) {\n    const celluleMoyenne = document.querySelector(\"#moyenneGenerale\");\n    const moyenne = moyenneTotale(totalCoefs, moyennesMatieres);\n    celluleMoyenne.innerHTML = `<abbr title='Moyenne du bulletin (Pondéré)'> ${\n        Math.round(moyenne * 1000) / 1000\n    }</abbr>`;\n\n    if (moyenne >= 10) {\n        celluleMoyenne.classList.add(\"good\");\n        celluleMoyenne.classList.remove(\"bad\");\n    } else {\n        celluleMoyenne.classList.remove(\"good\");\n        celluleMoyenne.classList.add(\"bad\");\n    }\n}\n\n/**\n * Affiche la moyenne de l'intranet\n * @param moyennesMatieres\n */\nexport function showMoyenneIntranet(moyennesMatieres) {\n    document.querySelector(\"#moy > td:last-child\").innerHTML =\n        `<abbr title='Moyenne de l&#x2019;intranet'> ${\n            Math.round(moyenneIntranet(moyennesMatieres) * 1000) / 1000\n        }</abbr>`;\n}\n\n/**\n * Affiche la moyenne d'une compétence\n * @param competenceId\n * @returns la moyenne de la compétence\n */\nexport function showMoyenneCompetence(competenceId) {\n    const moyenne = Math.round(moyenneCompetence(competenceId) * 1000) / 1000;\n    document.querySelector(`#moy > td:nth-child(${competenceId})`).innerHTML =\n        moyenne.toString();\n    return moyenne;\n}\n\n/**\n * Affiche la moyenne d'une compétence avec bonus\n * @param competenceId\n */\nexport function showMoyenneBonus(competenceId) {\n    const moyenne = moyenneBonus(competenceId);\n    const celluleMoyenne = document.querySelector(\n        `#moyBonus > td:nth-child(${competenceId})`,\n    );\n    celluleMoyenne.innerHTML = moyenne;\n\n    if (\n        moyenne >= 10 &&\n        document.querySelector(`#total > td:nth-child(${competenceId})`)\n            .innerHTML !== \"0\"\n    ) {\n        celluleMoyenne.classList.add(\"good\");\n        celluleMoyenne.classList.remove(\"bad\");\n        celluleMoyenne.classList.remove(\"neutral\");\n    } else if (\n        moyenne < 10 &&\n        document.querySelector(`#total > td:nth-child(${competenceId})`)\n            .innerHTML !== \"0\"\n    ) {\n        celluleMoyenne.classList.remove(\"good\");\n        celluleMoyenne.classList.add(\"bad\");\n        celluleMoyenne.classList.remove(\"neutral\");\n    } else {\n        celluleMoyenne.classList.remove(\"good\");\n        celluleMoyenne.classList.remove(\"bad\");\n        celluleMoyenne.classList.add(\"neutral\");\n    }\n}\n\n/**\n *  Compte les colonnes de notes\n * @returns le nombre de colonnes de notes\n */\nexport function compterColonnesNotes() {\n    const colonnes = document.querySelectorAll(\"table > thead > tr > th\");\n    let nbColonnes = 0;\n    colonnes.forEach((colonne) => {\n        if (colonne.innerHTML === \"Note\") {\n            nbColonnes += 1;\n        }\n    });\n    return nbColonnes;\n}\n\n/**\n * Ajoute une colonne de note et de coef\n * @returns\n */\nexport function ajouterColonneNoteCoef() {\n    if (compterColonnesNotes() >= 7) {\n        return;\n    }\n    // Ajouter les titre des colonnes avant la colonne de moyenne des matière\n    const moyenneMatiere = document.querySelector(\n        \"table > thead > tr > th:last-child\",\n    );\n    moyenneMatiere.insertAdjacentHTML(\"beforebegin\", \"<th>Note</th>\");\n    moyenneMatiere.insertAdjacentHTML(\"beforebegin\", \"<th>Coefficient</th>\");\n\n    // Ajouter les inputs avant la colonne de moyenne des matière\n    const lignes = document.querySelectorAll(\n        \"table > tbody > tr:not(#moy, #moyBonus, #total)\",\n    );\n    lignes.forEach((ligne) => {\n        const ligneId = ligne.id;\n        const moyenneDeMatiere = document.querySelector(\n            `#${ligneId} > td:last-child`,\n        );\n        moyenneDeMatiere.insertAdjacentHTML(\n            \"beforebegin\",\n            \"<td><input type='number' value='' min='0' max='100' step='1'></td>\",\n        );\n        moyenneDeMatiere.insertAdjacentHTML(\n            \"beforebegin\",\n            \"<td><input type='number' value='' min='0' max='20' step='0.01'></td>\",\n        );\n    });\n\n    // Ajouter des cellules vides dans la ligne de moyenne et total\n    const moyenne = document.querySelector(\"#moy > td:last-child\");\n    moyenne.insertAdjacentHTML(\"beforebegin\", \"<td></td>\");\n    moyenne.insertAdjacentHTML(\"beforebegin\", \"<td></td>\");\n    const total = document.querySelector(\"#total > td:last-child\");\n    total.insertAdjacentHTML(\"beforebegin\", \"<td></td>\");\n    total.insertAdjacentHTML(\"beforebegin\", \"<td></td>\");\n}\n\n/**\n * Supprime une colonne de note et de coef\n * @returns\n */\nexport function supprimerColonneNoteCoef() {\n    if (compterColonnesNotes() <= 1) {\n        return;\n    }\n    // Supprimer les titre des colonnes avant la colonne de moyenne des matière\n    const colonnesASupprimer = document.querySelectorAll(\n        \"table > thead > tr > th:nth-last-child(-n+3):not(:last-child)\",\n    );\n    colonnesASupprimer.forEach((colonne) => colonne.remove());\n    // Supprimer les inputs avant la colonne de moyenne des matière\n    const lignes = document.querySelectorAll(\n        \"table > tbody > tr:not(#moy, #moyBonus, #total)\",\n    );\n    for (let i = 0; i < lignes.length; i += 1) {\n        const ligne = lignes[i];\n        const ligneId = ligne.id;\n        const colonneASupprimer = document.querySelectorAll(\n            `#${ligneId} > td:nth-last-child(-n+3):not(:last-child)`,\n        );\n        colonneASupprimer.forEach((colonne) => colonne.remove());\n    }\n    // Supprimer des cellules vides dans la ligne de moyenne et total\n    const moyenne = document.querySelectorAll(\n        \"#moy > td:nth-last-child(-n+3):not(:last-child)\",\n    );\n    const total = document.querySelectorAll(\n        \"#total > td:nth-last-child(-n+3):not(:last-child)\",\n    );\n    for (let i = 0; i < moyenne.length; i += 1) {\n        moyenne[i].remove();\n        total[i].remove();\n    }\n}\n\n/**\n * Calcul le total des coefficients d'une matière\n * @returns le total des coefficients de la matière\n * @param lineId\n */\nexport function calculTotalCoef(lineId) {\n    let total = 0;\n    const coef = document.querySelectorAll(\n        `#${lineId} > td:nth-child(-n+${compterCompetences() + 1}) > input`,\n    );\n    // Transform coef to array\n    coef.forEach((c) => {\n        if (c.value !== \"\") {\n            total += parseFloat(c.value.replace(\",\", \".\"));\n        }\n    });\n\n    // A changer\n    if (total === 0) {\n        total = 1;\n    }\n    document.querySelector(`#${lineId} > .totalCoef`).innerHTML = total;\n    return total;\n}\n\nexport function showTotalCompetence(competenceId) {\n    document.querySelector(\n        `#total > td:nth-child(${competenceId}) > input`,\n    ).value = totalCompetence(competenceId);\n}\n\nexport function updateCharts(chartPanel) {\n    if (moyennes.moyennesCompetences.length === 0) {\n        return;\n    }\n\n    chartPanel.innerHTML = `\n<div class=\"chart-container\">\n    <canvas id=\"competences-chart\" style=\"height: 60vh;\"></canvas>\n</div>\n<div class=\"chart-container\">\n    <canvas id=\"matieres-chart\" style=\"height: 60vh;\"></canvas>\n</div>`;\n\n    const options = {\n        scales: {\n            r: {\n                angleLines: {\n                    display: true,\n                },\n                suggestedMin: 0,\n                suggestedMax: 20,\n            },\n        },\n    };\n    const ctxCompetences = document.getElementById(\"competences-chart\");\n    const ctxMatieres = document.getElementById(\"matieres-chart\");\n    const chartCompetences = new Chart(ctxCompetences, {\n        type: \"radar\",\n        options,\n        data: {\n            labels: moyennes.moyennesCompetences.map(\n                (competence) => competence.nom,\n            ),\n            datasets: [\n                {\n                    label: \"Moyennes par compétences\",\n                    data: moyennes.moyennesCompetences.map(\n                        (competence) => competence.moyenne,\n                    ),\n                    fill: true,\n                    backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n                    borderColor: \"rgb(255, 99, 132)\",\n                    pointBackgroundColor: \"rgb(255, 99, 132)\",\n                    pointBorderColor: \"#fff\",\n                    pointHoverBackgroundColor: \"#fff\",\n                    pointHoverBorderColor: \"rgb(255, 99, 132)\",\n                },\n            ],\n        },\n    });\n    console.log(\n        moyennes.moyennesMatieres\n            .map((competence) =>\n                competence.nom === \"bonus\" ? null : competence.nom,\n            )\n            .filter((competence) => competence !== null),\n    );\n    const chartMatiere = new Chart(ctxMatieres, {\n        type: \"radar\",\n        options,\n        data: {\n            labels: moyennes.moyennesMatieres\n                .map((competence) =>\n                    competence.nom === \"bonus\" ? null : competence.nom,\n                )\n                .filter((competence) => competence !== null),\n            datasets: [\n                {\n                    label: \"Moyennes par matières\",\n                    data: moyennes.moyennesMatieres\n                        .map((competence) =>\n                            competence.nom === \"bonus\"\n                                ? null\n                                : competence.moyenne,\n                        )\n                        .filter((competence) => competence !== null),\n                    fill: true,\n                    backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n                    borderColor: \"rgb(54, 162, 235)\",\n                    pointBackgroundColor: \"rgb(54, 162, 235)\",\n                    pointBorderColor: \"#fff\",\n                    pointHoverBackgroundColor: \"#fff\",\n                    pointHoverBorderColor: \"rgb(54, 162, 235)\",\n                },\n            ],\n        },\n    });\n}\n\n/**\n * Actualise les totaux et moyennes\n */\nexport function update() {\n    moyennes.moyennesMatieres = [];\n    moyennes.moyennesCompetences = [];\n    // Parcours des colonnes des compétences\n    const competences = document.querySelectorAll(\n        `table > thead > tr:not(.option) > th:nth-child(-n+${\n            compterCompetences() + 1\n        }):not(:first-child)`,\n    );\n    competences.forEach((competence, id) => {\n        showTotalCompetence(id + 2);\n    });\n    // Parcours de l'ensemble des lignes du tableau\n    const lignes = document.querySelectorAll(\n        \"table > tbody > tr:not(#moy, #moyBonus, .option)\",\n    );\n\n    const total = [];\n    const moyenne = [];\n    lignes.forEach((ligne) => {\n        const ligneId = ligne.id;\n\n        total.push(calculTotalCoef(ligneId));\n        if (ligneId !== \"total\") {\n            const moyenneMatiere = calculMoyenneMatiere(\n                compterCompetences(),\n                ligneId,\n            );\n            moyennes.moyennesMatieres.push({\n                nom: ligneId,\n                moyenne: moyenneMatiere,\n            });\n            moyenne.push(moyenneMatiere);\n            showMoyenneMatiere(ligneId);\n        }\n    });\n    showMoyenneTotale(total.slice(0, total.length - 1), moyenne);\n    showMoyenneIntranet(moyenne);\n\n    // Calcul de la moyenne par competence\n\n    /*\n    for (let i = 0; i < competences.length; i += 1) {\n        moyenneCompetence(i + 2);\n        moyenneBonus(i + 2);\n    }\n    */\n    competences.forEach((competence, id) => {\n        moyennes.moyennesCompetences.push({\n            nom: competence.innerHTML,\n            moyenne: showMoyenneCompetence(id + 2),\n        });\n        showMoyenneBonus(id + 2);\n    });\n    document\n        .querySelectorAll(\"main input[type='checkbox']\")\n        .forEach((checkbox) => {\n            checkbox.addEventListener(\"change\", () => {\n                // Get checkbox parent row\n                const ligne = checkbox.parentNode.parentNode;\n                if (checkbox.checked) {\n                    ligne.classList.remove(\"option\");\n                } else {\n                    ligne.classList.add(\"option\");\n                }\n            });\n        });\n\n    const chartPanel = document.getElementById(\"chart-panel\");\n    updateCharts(chartPanel);\n}\n\n/**\n * Affiche toutes les informations du bulletin\n * @param notesObj\n * @param ues\n * @param coefs\n */\nexport function displayNotes(notesObj, ues, coefs) {\n    // Supprimer les entetes de UE\n    const colonneUes = document.querySelectorAll(\"thead > tr > th.ue\");\n\n    if (colonneUes.length > 0) {\n        for (let i = 0; i < colonneUes.length; i += 1) {\n            colonneUes[i].remove();\n        }\n    }\n    // Supprimer toutes les lignes de matières\n    const allLignes = document.querySelectorAll(\"tbody > tr\");\n    if (allLignes.length > 0) {\n        for (let i = 0; i < allLignes.length; i += 1) {\n            allLignes[i].remove();\n        }\n    }\n\n    // Compter le nombre max de notes par matière\n    let maxEval = 0;\n    notesObj.forEach((noteObj) => {\n        if (noteObj.evaluations.length > maxEval) {\n            maxEval = noteObj.evaluations.length;\n        }\n    });\n\n    const nbColonnesNotes = compterColonnesNotes();\n\n    // Ajouter ou supprimer des colonnes de notes et de coef\n    if (maxEval > nbColonnesNotes) {\n        for (let i = 0; i < maxEval - nbColonnesNotes; i += 1) {\n            ajouterColonneNoteCoef();\n        }\n    } else if (maxEval < nbColonnesNotes) {\n        for (let i = 0; i < nbColonnesNotes - maxEval; i += 1) {\n            supprimerColonneNoteCoef();\n        }\n    }\n\n    // Ajouter les entetes de UE\n    ues.forEach((ue) => {\n        const enteteUe = document.createElement(\"th\");\n        enteteUe.classList.add(\"ue\");\n        enteteUe.innerHTML = ue.name;\n        const enteteTotal = document.querySelector(\"#totalCoef\");\n        enteteTotal.insertAdjacentElement(\"beforebegin\", enteteUe);\n    });\n\n    // Ajouter la ligne des totaux et moyennes\n    const nbCompetences = ues.length;\n    const nbColonnesTotal = nbCompetences + compterColonnesNotes() * 2 + 2;\n    const ligneTotal = document.createElement(\"tr\");\n    const ligneMoy = document.createElement(\"tr\");\n    ligneTotal.id = \"total\";\n    ligneMoy.id = \"moy\";\n    ligneTotal.innerHTML = \"<th>Total</th>\";\n    ligneMoy.innerHTML = \"<th>Moyenne</th>\";\n    for (let i = 0; i < nbColonnesTotal; i += 1) {\n        if (i === nbCompetences) {\n            ligneTotal.innerHTML += \"<td class='totalCoef'></td>\";\n        } else {\n            ligneTotal.innerHTML +=\n                \"<td><input type='number' value='' min='0' step='1'></td>\";\n        }\n        ligneMoy.innerHTML += \"<td></td>\";\n    }\n    ligneTotal.lastChild.id = \"moyenneGenerale\";\n    document.querySelector(\"table tbody\").appendChild(ligneTotal);\n    document.querySelector(\"table tbody\").appendChild(ligneMoy);\n    // Ajouter les colonnes de bonus\n    const ligneMoyBonus = document.createElement(\"tr\");\n    ligneMoyBonus.innerHTML = \"<th>+ Bonus</th>\";\n    for (let i = 0; i < nbCompetences; i += 1) {\n        ligneMoyBonus.innerHTML += \"<td></td>\";\n    }\n    ligneMoyBonus.id = \"moyBonus\";\n    document.querySelector(\"table tbody\").appendChild(ligneMoyBonus);\n\n    // Ajouter les lignes de matières\n    // On récupère la matière Bonus\n    const matiereBonus = notesObj.filter(\n        (matiere) =>\n            matiere.matiere.toUpperCase().includes(\"BONIFICATION\") ||\n            matiere.matiere.toUpperCase().includes(\"BONUS\"),\n    );\n\n    notesObj.forEach((noteObj, i) => {\n        const ligneMatiere = document.createElement(\"tr\");\n        if (noteObj.matiere.includes(\"Bonification\")) {\n            ligneMatiere.id = \"bonus\";\n        } else {\n            // Remplacer les caractères spéciaux par des _\n            ligneMatiere.id = noteObj.matiere.replace(/[^a-zA-Z0-9]/g, \"_\");\n        }\n        ligneMatiere.innerHTML = `<th><input id='${i}' type='checkbox' checked/>${notesObj[i].matiere}</th>`;\n        // Colonnes des coefficients\n        for (let j = 0; j < ues.length; j += 1) {\n            let w = 0;\n            while (\n                w < coefs.length &&\n                !coefs[w].matiere.includes(noteObj.matiere)\n            ) {\n                w += 1;\n            }\n            let k = 0;\n            while (\n                k < coefs[w].coefs.length &&\n                coefs[w].coefs[k].ue !== ues[j].id\n            ) {\n                k += 1;\n            }\n\n            if (k < coefs[w].coefs.length) {\n                ligneMatiere.innerHTML += `<td> <input type='number' value='${coefs[w].coefs[k].coef}' min='0' step='1'></td>`;\n            } else {\n                ligneMatiere.innerHTML +=\n                    \"<td><input type='number' value='' min='0' step='1'></td>\";\n            }\n        }\n        // Colonnes du total des coefficients\n        ligneMatiere.innerHTML += \"<td class='totalCoef'></td>\";\n        // Si aucune note n'est renseignée, ajouter une colonne note=0 et coef=1 puis des colonnes vides\n        if (noteObj.evaluations.length === 0) {\n            // decoché la la case à chocher pour ne pas afficher la matière\n            document.querySelector(\n                `#${ligneMatiere.id} input[type=checkbox]`,\n            ).checked = false;\n            for (let j = 0; j < maxEval; j += 1) {\n                ligneMatiere.innerHTML +=\n                    \"<td><input type='number' value='' min='0' max='20' step='0.01'></td>\";\n                ligneMatiere.innerHTML +=\n                    \"<td><input type='number' value='' min='0' max='100' step='1'></td>\";\n            }\n        } else {\n            // Colonnes des notes\n            for (let j = 0; j < maxEval; j += 1) {\n                if (noteObj.evaluations[j]) {\n                    ligneMatiere.innerHTML += `<td><input type='number' value='${noteObj.evaluations[j].note}' min='0' max='20' step='0.01'></td>`;\n                    ligneMatiere.innerHTML += `<td><input type='number'' value='${noteObj.evaluations[j].coefficient}' min='0' max='100' step='1'></td>`;\n                } else {\n                    ligneMatiere.innerHTML +=\n                        \"<td><input type='number' value='' min='0' max='20' step='0.01'></td>\";\n                    ligneMatiere.innerHTML +=\n                        \"<td><input type='number'' value='' min='0' max='100' step='1'></td>\";\n                }\n            }\n        }\n        // Colonnes de la moyenne de la matière\n        ligneMatiere.innerHTML += \"<td></td>\";\n\n        // Ajouter la ligne au tableau, avant la ligne des totaux\n        const ligneMoyenne = document.querySelector(\"#total\");\n        ligneMoyenne.insertAdjacentElement(\"beforebegin\", ligneMatiere);\n    });\n\n    update();\n}\n\nexport function exportAsPdf() {\n    window.print();\n}\n\nexport function displayChart() {\n    const chart = document.getElementById(\"chart-panel\");\n    chart.classList.toggle(\"hidden\");\n    document.querySelector(\"main > table\").classList.toggle(\"hidden\");\n}\n\nexport async function updateEvents() {\n    const chartPanel = document.getElementById(\"chart-panel\");\n    document.getElementById(\"export\").addEventListener(\"click\", exportAsPdf);\n\n    document.getElementById(\"darkMode\").addEventListener(\"change\", () => {\n        changeColorTheme();\n    });\n\n    document.getElementById(\"get-notes\").addEventListener(\"click\", () => {\n        getNotes().then((note) => {\n            displayNotes(note[0], note[1], note[2]);\n            document.querySelector(\".loader-container\").classList.add(\"hidden\");\n\n            const formContainer = document.getElementById(\"formContainer\");\n            formContainer.style.display = \"none\";\n        });\n    });\n\n    document.getElementById(\"update\").addEventListener(\"click\", () => {\n        update();\n    });\n\n    document.getElementById(\"ajouter\").addEventListener(\"click\", () => {\n        ajouterColonneNoteCoef();\n    });\n    document.getElementById(\"supprimer\").addEventListener(\"click\", () => {\n        supprimerColonneNoteCoef();\n    });\n\n    document.getElementById(\"chart\").addEventListener(\"click\", () => {\n        displayChart();\n    });\n\n    document.getElementById(\"showFormButton\").addEventListener(\"click\", () => {\n        const formContainer = document.getElementById(\"formContainer\");\n        formContainer.style.display = \"flex\";\n    });\n\n    document.getElementById(\"CloseFormButton\").addEventListener(\"click\", () => {\n        const formContainer = document.getElementById(\"formContainer\");\n        formContainer.style.display = \"none\";\n    });\n\n    document.querySelectorAll(\"input[type='number']\").forEach((input) => {\n        input.addEventListener(\"change\", update);\n    });\n}\n","import Logo from \"../public/img/log_big.png\";\nimport Iut from \"../public/img/logo_urca1.png\";\n\nexport function addImages() {\n    const logo = document.createElement(\"img\");\n    logo.alt = \"Logo de Ouaf Notes\";\n    logo.classList.add(\"logo\");\n    logo.src = Logo;\n\n    const iut = document.createElement(\"img\");\n    iut.alt = \"iut-reims\";\n    iut.src = Iut;\n\n    document\n        .getElementById(\"logo-container\")\n        .insertBefore(logo, document.getElementById(\"title\"));\n\n    document\n        .getElementById(\"onglet\")\n        .insertBefore(iut, document.getElementById(\"prevent\"));\n}\n","import { displayNotes, updateEvents } from \"./movies-ui\";\nimport { addImages } from \"./add-images\";\nimport \"../public/css/index.css\";\n\nif (process.env.NODE_ENV !== \"production\") {\n    console.log(\"Looks like we are in development mode!\");\n}\n\naddImages();\nupdateEvents();\n// Verifie le color scheme du navigateur\nconst userPrefersDark =\n    window.matchMedia &&\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\nif (userPrefersDark) {\n    document.getElementById(\"darkMode\").checked = false;\n    document.documentElement.setAttribute(\"data-theme\", \"dark\");\n} else {\n    document.getElementById(\"darkMode\").checked = true;\n    document.documentElement.setAttribute(\"data-theme\", \"light\");\n}\n\n// Vérifie le local storage pour récupérer les notes, coefs et ues\nconst notesJson = JSON.parse(localStorage.getItem(\"notes\"));\nlet ueCount = 0;\nif (\n    notesJson &&\n    notesJson.length === 3 &&\n    notesJson[0].length > 0 &&\n    notesJson[1].length > 0 &&\n    notesJson[2].length > 0\n) {\n    displayNotes(notesJson[0], notesJson[1], notesJson[2]);\n} else {\n    ueCount = document.querySelectorAll(\"th.ue\").length;\n    const coefs = document.querySelectorAll(\n        `tbody > tr:not(#moy, #moyBonus, #total, .option) > td:nth-child(n+${ueCount}${3}):nth-child(2n):not(:last-child)`,\n    );\n    const notes = document.querySelectorAll(\n        `tbody > tr:not(#moy, #moyBonus, #total, .option) > td:nth-child(n+${ueCount}${3}):nth-child(2n-1):not(:last-child)`,\n    );\n\n    coefs.forEach((coef) => {\n        coef.innerHTML = `<input type='number' value='${coef.innerHTML.replace(\n            \",\",\n            \".\",\n        )}' min='0' max='100' step='1'>`;\n    });\n    notes.forEach((note) => {\n        note.innerHTML = `<input type='number' value='${note.innerHTML.replace(\n            \",\",\n            \".\",\n        )}' min='0' max='20' step='0.01'>`;\n    });\n    const formContainer = document.getElementById(\"formContainer\");\n    formContainer.style.display = \"flex\";\n}\n"],"names":["__webpack_require__","round","v","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","hueValue","calln","Array","isArray","map","hsl2rgb","hue","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","Object","assign","fromObject","input","functionParse","str","charAt","m","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","type","ret","len","unpacked","keys","tkeys","j","ok","nk","parseInt","unpack","transparent","toLowerCase","nameParse","_rgb","_valid","valid","obj","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","getTicksLimit","ticksLength","maxTicksLimit","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","createPointLabelItem","itemOpts","outerDistance","drawingArea","extra","additionalAngle","pointLabelPosition","getPointPosition","yForAngle","getTextAlignForAngle","isNotOverlapped","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","centerPointLabels","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","getPointLabelContext","plFont","setCenterPoint","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","totalCompetence","competenceId","lignes","querySelectorAll","ligneId","cellule","querySelector","calculMoyenneMatiere","ueCount","lineId","occurences","notes","coefs","note","checked","classList","sommeNotesCoef","sommeCoef","moyennes","moyennesMatieres","moyennesCompetences","compterCompetences","showMoyenneCompetence","moyenne","somme","ligne","coef","innerHTML","moyenneCompetence","compterColonnesNotes","colonnes","nbColonnes","colonne","ajouterColonneNoteCoef","moyenneMatiere","insertAdjacentHTML","moyenneDeMatiere","supprimerColonneNoteCoef","competences","competence","calculTotalCoef","nom","totalCoefs","celluleMoyenne","moyenneTotale","showMoyenneTotale","moyenneIntranet","bonus","moyenneBonus","showMoyenneBonus","checkbox","chartPanel","ctxCompetences","ctxMatieres","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","log","updateCharts","displayNotes","notesObj","ues","colonneUes","allLignes","maxEval","noteObj","evaluations","nbColonnesNotes","ue","enteteUe","createElement","insertAdjacentElement","nbCompetences","nbColonnesTotal","ligneTotal","ligneMoy","lastChild","appendChild","ligneMoyBonus","matiere","ligneMatiere","coefficient","exportAsPdf","print","logo","alt","iut","insertBefore","addImages","async","documentElement","loader","username","password","notesJson","url","encodeURIComponent","fetch","credentials","headers","Accept","redirect","referrerPolicy","json","fetchNotes","err","alert","localStorage","setItem","getNotes","toggle","updateEvents","matchMedia","getItem"],"sourceRoot":""}